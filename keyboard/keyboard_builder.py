"""–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä."""
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from database.database import Question, Test


def create_main_menu_keyboard(is_admin: bool) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    # TODO: –î–æ–±–∞–≤–ª—è—Ç—å –º–µ–Ω—é –ø–æ –º–µ—Ä–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.row(
        InlineKeyboardButton(text="–¢–µ—Å—Ç—ã", callback_data="tests")
    )
    return keyboard_builder.as_markup()


def create_tests_keyboard(
    tests: list[Test], is_admin: bool
) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã."""
    keyboard_builder = InlineKeyboardBuilder()
    for button in tests:
        keyboard_builder.row(
            InlineKeyboardButton(
                text=f"{'üîí' if button.is_publish else '‚úèÔ∏è'}"
                f" {button.title}",
                callback_data=f"test_{button.id}_{button.is_publish}",
            )
        )
    if is_admin:
        keyboard_builder.row(
            InlineKeyboardButton(
                text="–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç", callback_data="add_test"
            )
        )
    keyboard_builder.row(
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="main_menu")
    )
    return keyboard_builder.as_markup()


def create_test_keyboard(
    test: Test,
    questions: list[Question],
    is_publish: bool,
    is_exists_image: bool,
) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–µ–Ω—é —Ç–µ—Å—Ç–∞."""
    keyboard_builder = InlineKeyboardBuilder()
    if is_exists_image:
        if not is_publish:
            for button in questions:
                keyboard_builder.row(
                    InlineKeyboardButton(
                        text=f"{button.text}",
                        callback_data=f"question_{button.id}",
                    )
                )
            # TODO: –î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
            keyboard_builder.row(
                InlineKeyboardButton(
                    text="–î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å",
                    callback_data=f"add_question_test_{test.id}",
                )
            )
            keyboard_builder.row(
                InlineKeyboardButton(
                    text="–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–µ—Å—Ç",
                    callback_data=f"publish_test_{test.id}",
                )
            )
    else:
        keyboard_builder.row(
            InlineKeyboardButton(
                text="–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞",
                callback_data=f"add_image_test_{test.id}",
            )
        )
    keyboard_builder.row(
        InlineKeyboardButton(
            text="–£–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç", callback_data=f"delete_test_{test.id}"
        )
    )
    keyboard_builder.row(
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="tests")
    )
    return keyboard_builder.as_markup()
